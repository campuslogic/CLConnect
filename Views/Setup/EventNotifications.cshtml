@{
    Layout = "~/Views/Shared/_LeftMenuLayout.cshtml";
}
<form class="form-horizontal" name="formEventNotifications">
    <h2><b>Event Notifications</b></h2>
    <p>
        This step will help you configure which incoming events you would like to act on. For each event you would like to respond to create an entry below and populate the necessary fields.
        Event id's are documented <a href="https://campuslogicinc.freshdesk.com/support/solutions/articles/5000573254-event-notifications" target="_blank">Event Notification Detail.</a>
        For further detail on the Event Notifications section please click <a href="https://campuslogicinc.freshdesk.com/support/solutions/articles/5000706489-event-notifications" target="_blank">Event Notification Help.</a>
    </p>
    <hr>
    <div class="padding-top-twenty">
        <p>Events to respond to</p>
        <div ng-repeat="event in vm.eventNotifications" class="form-group">
            <div class="col-md-2">
                <input class="form-control" placeholder="Event ID" ng-model="event.eventNotificationId" ng-change="vm.checkForDuplicateEvent()" />
            </div>
            <div class="col-md-2">
                <select class="form-control" style="height: 100%;" kendo-drop-down-list ng-model="event.handleMethod" ng-change="vm.onConnectionStringTypeChange(); vm.handleMethodChange(event);">
                    <option ng-repeat="type in vm.eventNotificationTypes" value="{{type.eventNotificationTypeId}}">{{type.label}}</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-control" style="height: 100%;" kendo-drop-down-list ng-show="vm.IsFileStoreEnabled($index)" ng-disabled="!vm.IsFileStoreEnabled($index)" ng-model="event.fileStoreType">
                    <option value="Shared">Shared</option>
                    <option value="Individual">Individual</option>
                </select>
                <input class="form-control" placeholder="Batch Name" ng-show="vm.IsBatchProcessingEnabled($index)" ng-disabled="!vm.IsBatchProcessingEnabled($index)" ng-model="event.batchName" ng-change="vm.checkForInvalidBatchName()" />
                <input class="form-control" placeholder="Endpoint Name" ng-show="vm.IsApiIntegrationsEnabled($index)" ng-disabled="!vm.IsApiIntegrationsEnabled($index)" ng-model="event.apiEndpointName" ng-change="vm.hasInvalidApiEndpointName()" />
            </div>
            <div class="col-md-5">
                <input id="eventcommand{{$index}}" name="eventcommand{{$index}}" class="form-control" placeholder="Database Command" ng-model="event.dbCommandFieldValue" ng-disabled="!vm.IsCommandEnabled($index)" ng-required="vm.IsCommandEnabled($index)" />
                <span class="field-validation-error" ng-show="(formEventNotifications.eventcommand{{$index}}.$dirty && formEventNotifications.eventcommand{{$index}}.$error.required) || (!event.dbCommandFieldValue && !vm.validationService.pageValidations.eventNotificationsValid && vm.IsCommandEnabled($index))">Required</span>
            </div>
            <div class="col-md-1">
                <button class="btn btn-default" ng-hide="vm.eventNotifications.length == 1" ng-click="vm.removeEventNotification($index)"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <div>
            <a href="" class="pull-right" ng-click="vm.addEventNotification()">Add another event</a>
        </div>
    </div>
    <div class="padding-top-ten">
        <div ng-if="vm.duplicateEvent">
            <span class="alert alert-danger" role="alert">Events can only be responded to once, please delete duplicate event.</span>
        </div>
        <div style="padding-top:36px;" ng-if="vm.invalidBatchName">
            <span class="alert alert-danger" role="alert">Batch names cannot be blank or used more than once, please correct the batch process.</span>
        </div>
        <div style="padding-top:36px;" ng-if="vm.invalidApiEndpointName">
            <span class="alert alert-danger" role="alert">API Endpoint names cannot be blank.</span>
        </div>
    </div>
    <div class="padding-top-twenty">
        <label>Database Connection</label>
        <p>Enter the connection details to use when executing database commands.</p>
        <div class="form-group">
            <label class="col-md-3 control-label">Connection Type</label>
            <div class="col-md-9">
                <select class="form-control" kendo-drop-down-list ng-model="vm.connectionStringType" style="height:100%;" ng-change="vm.onConnectionStringTypeChange()">
                    <option value="n">None</option>
                    <option value="c">Connection string</option>
                    <option value="d">DSN</option>
                </select>
            </div>
        </div>
        <ng-switch on="vm.connectionStringType">
            <div ng-switch-when="c">
                <div class="form-group">
                    <label class="col-md-3 control-label">Connection String</label>
                    <div class="col-md-9">
                        <input type="text" class="form-control" id="inputConnectionString" placeholder="Connection string" ng-model="vm.clientDatabaseConnection.connectionString" />
                    </div>
                </div>
            </div>
            <div ng-switch-when="d">
                <div class="form-group">
                    <label class="col-md-3 control-label">DSN Name</label>
                    <div class="col-md-9">
                        <input type="text" class="form-control" placeholder="DSN Name" ng-model="vm.dsnName" ng-change="vm.onTextBoxChange()" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">DSN Username</label>
                    <div class="col-md-9">
                        <input type="text" class="form-control" placeholder="DSN Username" ng-model="vm.dsnUser" ng-change="vm.onTextBoxChange()" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">DSN Password</label>
                    <div class="col-md-9">
                        <input type="password" class="form-control" placeholder="DSN Password" ng-model="vm.dsnPassword" ng-change="vm.onTextBoxChange()" />
                    </div>
                </div>
            </div>
        </ng-switch>
        <div class="form-group" ng-hide="vm.connectionStringType == 'n'">
            <div class="col-md-6 col-md-offset-3">
                <button class="btn btn-default btn-lg full-width" ng-click="vm.testConnectionString(formEventNotifications)">Test database connection</button>
                <span class="alert alert-success" role="alert" ng-show="vm.validationService.pageValidations.connectionStringValid && vm.validationService.pageValidations.eventNotificationsConnectionTested">Test Successful</span>
                <span class="alert alert-danger" role="alert" ng-show="!vm.validationService.pageValidations.connectionStringValid && vm.validationService.pageValidations.eventNotificationsConnectionTested">Error Testing Connection String</span>
            </div>
        </div>
        <div class="col-md-6">
            <span class="alert alert-danger" role="alert" ng-show="(vm.usingDatabase && (!vm.clientDatabaseConnection.connectionString || vm.clientDatabaseConnection.connectionString === '') && (vm.connectionStringType === 'c' || vm.connectionStringType === 'n'))
                                                            || (vm.usingDatabase && vm.connectionStringType === 'd' && (!vm.dsnName || vm.dsnName === ''))">A connection string or DSN needs to be established.</span>
        </div>
    </div>
</form>
